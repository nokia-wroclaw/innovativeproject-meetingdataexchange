/**
 * This class is generated by jOOQ
 */
package models.public_.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.1.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Meeting extends org.jooq.impl.TableImpl<models.public_.tables.records.MeetingRecord> {

	private static final long serialVersionUID = -2139270722;

	/**
	 * The singleton instance of <code>PUBLIC.MEETING</code>
	 */
	public static final models.public_.tables.Meeting MEETING = new models.public_.tables.Meeting();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<models.public_.tables.records.MeetingRecord> getRecordType() {
		return models.public_.tables.records.MeetingRecord.class;
	}

	/**
	 * The column <code>PUBLIC.MEETING.ID</code>. 
	 */
	public final org.jooq.TableField<models.public_.tables.records.MeetingRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>PUBLIC.MEETING.TITLE</code>. 
	 */
	public final org.jooq.TableField<models.public_.tables.records.MeetingRecord, java.lang.String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>PUBLIC.MEETING.TOPIC</code>. 
	 */
	public final org.jooq.TableField<models.public_.tables.records.MeetingRecord, java.lang.String> TOPIC = createField("TOPIC", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>PUBLIC.MEETING.STARTTIME</code>. 
	 */
	public final org.jooq.TableField<models.public_.tables.records.MeetingRecord, java.sql.Timestamp> STARTTIME = createField("STARTTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>PUBLIC.MEETING.ENDTIME</code>. 
	 */
	public final org.jooq.TableField<models.public_.tables.records.MeetingRecord, java.sql.Timestamp> ENDTIME = createField("ENDTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>PUBLIC.MEETING.ABILITYTOSENDFILES</code>. 
	 */
	public final org.jooq.TableField<models.public_.tables.records.MeetingRecord, java.lang.Boolean> ABILITYTOSENDFILES = createField("ABILITYTOSENDFILES", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * The column <code>PUBLIC.MEETING.AUTHORID</code>. 
	 */
	public final org.jooq.TableField<models.public_.tables.records.MeetingRecord, java.lang.Integer> AUTHORID = createField("AUTHORID", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * Create a <code>PUBLIC.MEETING</code> table reference
	 */
	public Meeting() {
		super("MEETING", models.public_.Public.PUBLIC);
	}

	/**
	 * Create an aliased <code>PUBLIC.MEETING</code> table reference
	 */
	public Meeting(java.lang.String alias) {
		super(alias, models.public_.Public.PUBLIC, models.public_.tables.Meeting.MEETING);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<models.public_.tables.records.MeetingRecord, java.lang.Integer> getIdentity() {
		return models.public_.Keys.IDENTITY_MEETING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<models.public_.tables.records.MeetingRecord> getPrimaryKey() {
		return models.public_.Keys.CONSTRAINT_6;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<models.public_.tables.records.MeetingRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<models.public_.tables.records.MeetingRecord>>asList(models.public_.Keys.CONSTRAINT_6);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public models.public_.tables.Meeting as(java.lang.String alias) {
		return new models.public_.tables.Meeting(alias);
	}
}
